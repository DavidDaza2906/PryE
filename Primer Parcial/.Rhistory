table(df_paises_sexo)
df_paises_sexo <- ds_olimpicos[, c("Sex", "Team")]
table(df_paises_sexo)
df_paises_sexo <- ds_olimpicos[, c("Sex", "Team")]
df_paises_sexo_count %>%
ggplot(aes(x = Team, y = Sex, fill = count)) +
geom_tile() +
geom_text(aes(label = count), color = "white", size = 3) +
labs(title = "Número de participantes por país y sexo",
x = "País",
y = "Sexo") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
index_con_medalla = ds_olimpicos$Medal != "NA"
m_medalla <- ds_olimpicos[index_con_medalla,]
pais_medalla <- m_medalla[, c("Team", "Medal")]
tabla_Pais_medalla <- table(pais_medalla)
medallas <- as.data.frame.matrix(tabla_Pais_medalla)
medallas$puntos <- (medallas$Bronze + (medallas$Silver * 2) + (medallas$Gold * 3))
medallas_ordenadas <- medallas[order(medallas$puntos, decreasing = TRUE),]
ggplot(medallas_ordenadas, aes(x = Team, y = Count, fill = Medal)) +
geom_col(position = "stack") +
geom_text(aes(label = Count), position = position_stack(vjust = 0.5), size = 3) +
labs(title = "Medallería por País",
x = "País",
y = "Número de Medallas",
fill = "Medalla") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
index_con_medalla = ds_olimpicos$Medal != "NA"
m_medalla <- ds_olimpicos[index_con_medalla,]
pais_medalla <- m_medalla[, c("Team", "Medal")]
tabla_Pais_medalla <- table(pais_medalla)
medallas <- as.data.frame.matrix(tabla_Pais_medalla)
medallas$puntos <- (medallas$Bronze + (medallas$Silver * 2) + (medallas$Gold * 3))
medallas_ordenadas <- medallas[order(medallas$puntos, decreasing = TRUE),]
ggplot2(medallas_ordenadas, aes(x = Team, y = Count, fill = Medal)) +
geom_col(position = "stack") +
geom_text(aes(label = Count), position = position_stack(vjust = 0.5), size = 3) +
labs(title = "Medallería por País",
x = "País",
y = "Número de Medallas",
fill = "Medalla") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
#install.packages("readxl", repos = "http://cran.us.r-project.org")
#install.packages("dplyr", repos= "http://cran.us.r-project.org")
install.packages("ggplot2", repos= "http://cran.us.r-project.org")
#install.packages("descriptr", repos= "http://cran.us.r-project.org")
library(readxl)
library(dplyr)
library(ggplot2)
library(descriptr)
# Chunk 2
d_olimpicos <- read_excel("Olimpicos Atenas 2004.xlsx")
#set.seed()
ds_olimpicos <- d_olimpicos[sample(1:nrow(d_olimpicos), size=200), ]
# Chunk 3
ds_olimpicos$ID <- NULL
ds_olimpicos$NOC <- NULL
ds_olimpicos$Games <- NULL
ds_olimpicos$Year <- NULL
ds_olimpicos$Season <- NULL
ds_olimpicos$City <- NULL
# Chunk 4
df_paises_sexo <- ds_olimpicos[, c("Sex", "Team")]
df_paises_sexo_count <- df_paises_sexo %>%
group_by(Team, Sex) %>%
summarise(count = n())
df_paises_sexo_count
# Chunk 5: medallas por paises
index_con_medalla = ds_olimpicos$Medal != "NA"
m_medalla <- ds_olimpicos[index_con_medalla,]
pais_medalla <- m_medalla[, c("Team", "Medal")]
tabla_Pais_medalla <- table(pais_medalla)
medallas <- as.data.frame.matrix(tabla_Pais_medalla)
medallas$puntos <- (medallas$Bronze + (medallas$Silver * 2) + (medallas$Gold * 3))
medallas_ordenadas <- medallas[order(medallas$puntos, decreasing = TRUE),]
ggplot2(medallas_ordenadas, aes(x = Team, y = Count, fill = Medal)) +
geom_col(position = "stack") +
geom_text(aes(label = Count), position = position_stack(vjust = 0.5), size = 3) +
labs(title = "Medallería por País",
x = "País",
y = "Número de Medallas",
fill = "Medalla") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
index_con_medalla = ds_olimpicos$Medal != "NA"
m_medalla <- ds_olimpicos[index_con_medalla,]
pais_medalla <- m_medalla[, c("Team", "Medal")]
tabla_Pais_medalla <- table(pais_medalla)
medallas <- as.data.frame.matrix(tabla_Pais_medalla)
medallas$puntos <- (medallas$Bronze + (medallas$Silver * 2) + (medallas$Gold * 3))
medallas_ordenadas <- medallas[order(medallas$puntos, decreasing = TRUE),]
ggplot(medallas_ordenadas, aes(x = Team, y = Count, fill = Medal)) +
geom_col(position = "stack") +
geom_text(aes(label = Count), position = position_stack(vjust = 0.5), size = 3) +
labs(title = "Medallería por País",
x = "País",
y = "Número de Medallas",
fill = "Medalla") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
index_con_medalla = ds_olimpicos$Medal != "NA"
m_medalla <- ds_olimpicos[index_con_medalla,]
pais_medalla <- m_medalla[, c("Team", "Medal")]
tabla_Pais_medalla <- table(pais_medalla)
medallas <- as.data.frame.matrix(tabla_Pais_medalla)
medallas$puntos <- (medallas$Bronze + (medallas$Silver * 2) + (medallas$Gold * 3))
medallas_ordenadas <- medallas[order(medallas$puntos, decreasing = TRUE),]
ggplot(medallas_ordenadas, aes(x = "Team", y = "Count", fill = "Medal")) +
geom_col(position = "stack") +
geom_text(aes(label = Count), position = position_stack(vjust = 0.5), size = 3) +
labs(title = "Medallería por País",
x = "País",
y = "Número de Medallas",
fill = "Medalla") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
index_con_medalla = ds_olimpicos$Medal != "NA"
m_medalla <- ds_olimpicos[index_con_medalla,]
pais_medalla <- m_medalla[, c("Team", "Medal")]
tabla_Pais_medalla <- table(pais_medalla)
medallas <- as.data.frame.matrix(tabla_Pais_medalla)
medallas$puntos <- (medallas$Bronze + (medallas$Silver * 2) + (medallas$Gold * 3))
medallas_ordenadas <- medallas[order(medallas$puntos, decreasing = TRUE),]
medallas_ordenadas
df_sports <- ds_olimpicos[, c("Sport")]
df_sports_count <- df_sports %>%
group_by(Sport) %>%
summarise(count = n())
diag_barra <- ggplot(df_sports_count, mapping=aes(x = Sport, y=count)) +
geom_col(fill = "#DDD") + labs(title = "Deportes en competición", y = "Número de participantes") +
theme(
plot.background = element_rect(fill = "gray20"),
panel.background = element_rect(fill = "gray20"),
)
diag_barra
ds_olimpicos[order(ds_olimpicos$Weight, decreasing = TRUE), ]
ds_olimpicos[order(ds_olimpicos$Weight, decreasing = FALSE), ]
# Datos de muestra (reemplaza con tus propios datos)
peso <- ds_olimpicos$Weight
sexo <- ds_olimpicos$Sex
# Crear el diagrama de caja y bigotes
boxplot(peso ~ sexo, col= c("pink", "blue"), main="Diagrama de caja de bigotes de peso por sexo")
ds_olimpicos[order(ds_olimpicos$Weight, decreasing = FALSE), ]
# Datos de muestra (reemplaza con tus propios datos)
peso <- ds_olimpicos$Weight
sexo <- ds_olimpicos$Sex
# Crear el diagrama de caja y bigotes
boxplot(peso ~ sexo, col= c("pink", "blue"), main="Diagrama de caja de bigotes de peso por sexo")
ds_olimpicos[order(ds_olimpicos$Weight, decreasing = FALSE), ]
ds_olimpicos[order(ds_olimpicos$Weight, decreasing = FALSE), c("Name", "Weight")]
ds_olimpicos[order(ds_olimpicos$Weight, decreasing = TRUE), c("Name", "Weight")]
# Datos de muestra (reemplaza con tus propios datos)
peso <- ds_olimpicos$Weight
sexo <- ds_olimpicos$Sex
# Crear el diagrama de caja y bigotes
boxplot(peso ~ sexo, main="Diagrama de Caja y Bigotes por Sexo",
xlab="Sexo", ylab="Peso (kg)")
ds_olimpicos[order(ds_olimpicos$Weight, decreasing = TRUE), c("Name", "Weight")]
# Datos de muestra (reemplaza con tus propios datos)
peso <- ds_olimpicos$Weight
sexo <- ds_olimpicos$Sex
# Crear el diagrama de caja y bigotes
boxplot(peso ~ sexo, main="Diagrama de Caja y Bigotes por Sexo",
xlab="Sexo", ylab="Peso (kg)")
ds_olimpicos[order(ds_olimpicos$Weight, decreasing = TRUE), c("Name", "Weight")]
df_mujer_altura_n
df_mujer_altura <- ds_olimpicos[, c("Sex", "Height")]
df_mujer_altura <- filter(df_mujer_altura,Sex=="F")
df_mujer_altura_n <- df_mujer_altura %>%
group_by(Sex,Height) %>%
summarise(count = n())
df_mujer_altura_n
ggplot(df_mujer_altura_n, aes(x = Height, y = count)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Frecuencia de altura por mujer", x = "Altura", y = "Count") +
theme_minimal()
index_con_medalla = ds_olimpicos$Medal != "NA"
m_medalla <- ds_olimpicos[index_con_medalla,]
pais_medalla <- m_medalla[, c("Team", "Medal")]
tabla_Pais_medalla <- table(pais_medalla)
medallas <- as.data.frame.matrix(tabla_Pais_medalla)
medallas$puntos <- (medallas$Bronze + (medallas$Silver * 2) + (medallas$Gold * 3))
medallas_ordenadas <- medallas[order(medallas$puntos, decreasing = TRUE),]
medallas_ordenadas
medallas_ordenadas <- medallas_ordenadas %>%
rownames_to_column("Team") %>%
mutate(Total = Bronze + Silver * 2 + Gold * 3) %>%
select(Team, Bronze, Silver, Gold, Total) %>%
arrange(desc(Total))
library(readxl)
library(dplyr)
library(ggplot2)
library(descriptr)
library(dplyr)
library(knitr)
index_con_medalla = ds_olimpicos$Medal != "NA"
m_medalla <- ds_olimpicos[index_con_medalla,]
pais_medalla <- m_medalla[, c("Team", "Medal")]
tabla_Pais_medalla <- table(pais_medalla)
medallas <- as.data.frame.matrix(tabla_Pais_medalla)
medallas$puntos <- (medallas$Bronze + (medallas$Silver * 2) + (medallas$Gold * 3))
medallas_ordenadas <- medallas[order(medallas$puntos, decreasing = TRUE),]
medallas_ordenadas
medallas_ordenadas <- medallas_ordenadas %>%
rownames_to_column("Team") %>%
mutate(Total = Bronze + Silver * 2 + Gold * 3) %>%
select(Team, Bronze, Silver, Gold, Total) %>%
arrange(desc(Total))
index_con_medalla = ds_olimpicos$Medal != "NA"
m_medalla <- ds_olimpicos[index_con_medalla,]
pais_medalla <- m_medalla[, c("Team", "Medal")]
tabla_Pais_medalla <- table(pais_medalla)
medallas <- as.data.frame.matrix(tabla_Pais_medalla)
medallas$puntos <- (medallas$Bronze + (medallas$Silver * 2) + (medallas$Gold * 3))
medallas_ordenadas <- medallas[order(medallas$puntos, decreasing = TRUE),]
medallas_ordenadas
# Generar la tabla con kable
kable(medallas_ordenadas,
caption = "Medallería por País",
col.names = c("País", "Bronce", "Plata", "Oro", "Puntos Totales"),
index_con_medalla = ds_olimpicos$Medal != "NA"
m_medalla <- ds_olimpicos[index_con_medalla,]
pais_medalla <- m_medalla[, c("Team", "Medal")]
tabla_Pais_medalla <- table(pais_medalla)
medallas <- as.data.frame.matrix(tabla_Pais_medalla)
medallas$puntos <- (medallas$Bronze + (medallas$Silver * 2) + (medallas$Gold * 3))
medallas_ordenadas <- medallas[order(medallas$puntos, decreasing = TRUE),]
medallas_ordenadas
# Generar la tabla con kable
kable(medallas_ordenadas,
caption = "Medalleria por Pais",
col.names = c("País", "Bronce", "Plata", "Oro", "Puntos Totales"),
index_con_medalla = ds_olimpicos$Medal != "NA"
m_medalla <- ds_olimpicos[index_con_medalla,]
pais_medalla <- m_medalla[, c("Team", "Medal")]
tabla_Pais_medalla <- table(pais_medalla)
medallas <- as.data.frame.matrix(tabla_Pais_medalla)
medallas$puntos <- (medallas$Bronze + (medallas$Silver * 2) + (medallas$Gold * 3))
medallas_ordenadas <- medallas[order(medallas$puntos, decreasing = TRUE),]
medallas_ordenadas
# Generar la tabla con kable
kable(medallas_ordenadas,
caption = "Medalleria por Pais",
col.names = c("Pais", "Bronce", "Plata", "Oro", "Puntos Totales"),
align = "c")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
#install.packages("readxl", repos = "http://cran.us.r-project.org")
#install.packages("dplyr", repos= "http://cran.us.r-project.org")
#install.packages("ggplot2", repos= "http://cran.us.r-project.org")
#install.packages("descriptr", repos= "http://cran.us.r-project.org")
library(readxl)
library(dplyr)
library(ggplot2)
library(descriptr)
library(dplyr)
library(knitr)
# Chunk 2
d_olimpicos <- read_excel("Olimpicos Atenas 2004.xlsx")
set.seed(1234)
ds_olimpicos <- d_olimpicos[sample(1:nrow(d_olimpicos), size=200), ]
# Chunk 3
ds_olimpicos$ID <- NULL
ds_olimpicos$NOC <- NULL
ds_olimpicos$Games <- NULL
ds_olimpicos$Year <- NULL
ds_olimpicos$Season <- NULL
ds_olimpicos$City <- NULL
# Chunk 4
df_paises_sexo <- ds_olimpicos[, c("Sex", "Team")]
df_paises_sexo_count <- df_paises_sexo %>%
group_by(Team, Sex) %>%
summarise(count = n())
df_paises_sexo_count
# Chunk 5: medallas por paises
index_con_medalla = ds_olimpicos$Medal != "NA"
m_medalla <- ds_olimpicos[index_con_medalla,]
pais_medalla <- m_medalla[, c("Team", "Medal")]
tabla_Pais_medalla <- table(pais_medalla)
medallas <- as.data.frame.matrix(tabla_Pais_medalla)
medallas$puntos <- (medallas$Bronze + (medallas$Silver * 2) + (medallas$Gold * 3))
medallas_ordenadas <- medallas[order(medallas$puntos, decreasing = TRUE),]
medallas_ordenadas
# Generar la tabla con kable
kable(medallas_ordenadas,
caption = "Medalleria por Pais",
col.names = c("Pais", "Bronce", "Plata", "Oro", "Puntos Totales"),
align = "c")
# Chunk 6
df_sports <- ds_olimpicos[, c("Sport")]
df_sports_count <- df_sports %>%
group_by(Sport) %>%
summarise(count = n())
diag_barra <- ggplot(df_sports_count, mapping=aes(x = Sport, y=count)) +
geom_col(fill = "#aaaaaa") +
labs(
title = "Deportes en competición",
x = "",
y = "Número de participantes") +
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
#install.packages("readxl", repos = "http://cran.us.r-project.org")
#install.packages("dplyr", repos= "http://cran.us.r-project.org")
#install.packages("ggplot2", repos= "http://cran.us.r-project.org")
#install.packages("descriptr", repos= "http://cran.us.r-project.org")
library(readxl)
library(dplyr)
library(ggplot2)
library(descriptr)
library(dplyr)
library(knitr)
# Chunk 2
d_olimpicos <- read_excel("Olimpicos Atenas 2004.xlsx")
set.seed(1234)
ds_olimpicos <- d_olimpicos[sample(1:nrow(d_olimpicos), size=200), ]
# Chunk 3
ds_olimpicos$ID <- NULL
ds_olimpicos$NOC <- NULL
ds_olimpicos$Games <- NULL
ds_olimpicos$Year <- NULL
ds_olimpicos$Season <- NULL
ds_olimpicos$City <- NULL
# Chunk 4
df_paises_sexo <- ds_olimpicos[, c("Sex", "Team")]
df_paises_sexo_count <- df_paises_sexo %>%
group_by(Team, Sex) %>%
summarise(count = n())
df_paises_sexo_count
# Chunk 5: medallas por paises
index_con_medalla = ds_olimpicos$Medal != "NA"
m_medalla <- ds_olimpicos[index_con_medalla,]
pais_medalla <- m_medalla[, c("Team", "Medal")]
tabla_Pais_medalla <- table(pais_medalla)
medallas <- as.data.frame.matrix(tabla_Pais_medalla)
medallas$puntos <- (medallas$Bronze + (medallas$Silver * 2) + (medallas$Gold * 3))
medallas_ordenadas <- medallas[order(medallas$puntos, decreasing = TRUE),]
medallas_ordenadas
# Generar la tabla con kable
kable(medallas_ordenadas,
caption = "Medalleria por Pais",
col.names = c("Pais", "Bronce", "Plata", "Oro", "Puntos Totales"),
align = "c")
# Chunk 6
df_sports <- ds_olimpicos[, c("Sport")]
df_sports_count <- df_sports %>%
group_by(Sport) %>%
summarise(count = n())
diag_barra <- ggplot(df_sports_count, mapping=aes(x = Sport, y=count)) +
geom_col(fill = "#aaaaaa") +
labs(
title = "Deportes en competición",
x = " ",
y = "Número de participantes") +
df_sexo_altura_n
df_sexo_altura <- ds_olimpicos[, c("Sex", "Height")]
df_sexo_altura_n <- df_sexo_altura %>%
group_by(Sex) %>%
summarise(mean_height = mean(Height),
median_height = median(Height),
min_height = min(Height),
max_height = max(Height),
mode_height = ds_mode(Height))
df_sexo_altura_n
table(peso, sexo)
order(peso, decreasing = TRUE)
order(ds_olimpicos, decreasing = TRUE)
order(ds_olimpicos$Weight, decreasing = TRUE)
rate(ds_olimpicos$Weight, decreasing = TRUE)
peso[order(ds_olimpicos$Weight, decreasing = TRUE), ]
ds_olimpicos[order(ds_olimpicos$Weight, decreasing = TRUE), ]
df_mujer_altura
print(medallas_ordenadas)
d_olimpicos <- read_excel("Olimpicos Atenas 2004.xlsx")
set.seed(1234)
ds_olimpicos <- d_olimpicos[sample(1:nrow(d_olimpicos), size=200), ]
onlyWom <- ds_olimpicos[, c("Sex", "Weight")]
onlyWom
onlyWom <- filter(onlyWom, Sex=="F")
onlyWom
median(onlyWom)
onlyWom
median(onlyWom)
onlyWom <- ds_olimpicos[, c("Weight")]
onlyWom
onlyWom <- filter(onlyWom, Sex=="F")
onlyWom <- ds_olimpicos[, c("Weight")]
onlyWom
median(onlyWom)
median(as.numeric(onlyWom))
onlyWom
as.numeric(onlyWom)
ds_olimpicos <- d_olimpicos[sample(1:nrow(d_olimpicos), size=200), ]
onlyWom <- ds_olimpicos[, c("Sex", "Weight")]
onlyWom
onlyWom <- filter(onlyWom, Sex=="F")
onlyWom <- ds_olimpicos[, c("Weight")]
onlyWom
median(onlyWom)
as.numeric(as.character(onlyWom))
onlyWom <- ds_olimpicos[, c("Weight")]
onlyWom
as.character(onlyWom)
onlyWom <- as.numeric(onlyWom)
onlyWom <- as.integer(onlyWom)
onlyWom <- as.character(onlyWom)
median(onlyWom)
onlyWom <- ds_olimpicos[, c("Sex", "Weight")]
onlyWom
onlyWom <- filter(onlyWom, Sex=="F")
onlyWom <- ds_olimpicos[, c("Weight")]
onlyWom
onlyWom <- as.character(onlyWom)
median(onlyWom)
onlyWom <- ds_olimpicos[, c("Sex", "Weight")]
onlyWom
# Convertir la columna Weight a numérica
onlyWom$Weight <- as.numeric(as.character(onlyWom$Weight))
# Calcular la mediana
median_weight <- median(onlyWom$Weight)
print(median_weight)
onlyWom <-filter(onlyWom, Sex=="F")
onlyWom
onlyWom$Weight <- as.numeric(as.character(onlyWom$Weight))
median_weight <- median(onlyWom$Weight)
print(median_weight)
